{"version":3,"file":"flux-angular.esm.js","sources":["../src/flux-angular.js"],"sourcesContent":["import Baobab from 'baobab'\nimport dispatchr from 'dispatchr'\nimport angular from 'angular'\n\nconst angularModule = angular.module\nlet registeredStores = []\nlet autoInjectStores = false\nlet useEvalAsync = true\n\n// A function that creates stores\nfunction createStore(name, spec = {}, immutableDefaults, flux) {\n  // Constructor of a yahoo dispatchr store\n  const Store = function(dispatcher) {\n    this.dispatcher = dispatcher\n\n    // Check if store exists when waiting for it\n    this.waitFor = function(stores, cb) {\n      stores = Array.isArray(stores) ? stores : [stores]\n      if (!flux.areStoresRegistered(stores)) {\n        throw new Error(\n          'Waiting for stores that are not injected into Angular yet, ' +\n            stores.join(', ') +\n            '. Be sure to inject stores before waiting for them'\n        )\n      }\n      this.dispatcher.waitFor(stores, cb.bind(this))\n    }\n\n    if (!this.initialize) {\n      throw new Error(\n        'Store ' +\n          name +\n          ' does not have an initialize method which is is necessary to set the initial state'\n      )\n    }\n\n    this.initialize()\n  }\n\n  // Add constructor properties, as required by Yahoo Dispatchr\n  Store.handlers = spec.handlers\n  Store.storeName = name\n\n  // Instantiates immutable state and saves it to private variable that can be used for setting listeners\n  Store.prototype.immutable = function(initialState, options = {}) {\n    if (this.__tree) {\n      this.__tree.set(initialState)\n    } else {\n      this.__tree = new Baobab(\n        initialState,\n        angular.extend({}, immutableDefaults, options)\n      )\n    }\n    return this.__tree\n  }\n\n  Store.prototype.monkey = Baobab.monkey\n\n  // Attach store definition to the prototype\n  Object.keys(spec).forEach(function(key) {\n    Store.prototype[key] = spec[key]\n  })\n\n  return Store\n}\n\n// Flux Service is a wrapper for the Yahoo Dispatchr\nconst FluxService = function(immutableDefaults, $rootScope) {\n  this.stores = []\n  this.dispatcherInstance = dispatchr.createDispatcher()\n  this.dispatcher = this.dispatcherInstance.createContext()\n\n  this.dispatch = function() {\n    if (registeredStores.length) {\n      console.warn(\n        'There are still stores not injected: ' +\n          registeredStores.join(',') +\n          '. Make sure to manually inject all stores before running any dispatches or set autoInjectStores to true.'\n      ) // eslint-disable-line no-console\n    }\n    this.dispatcher.dispatch.apply(this.dispatcher, arguments)\n  }\n\n  this.createStore = function(name, spec) {\n    const store = createStore(name, spec, immutableDefaults, this)\n    let storeInstance\n\n    // Create the exports object\n    store.exports = {}\n\n    this.dispatcherInstance.registerStore(store)\n    this.stores.push(store)\n\n    // Add cloning to exports\n\n    if (!spec.exports) {\n      throw new Error(\n        'You have to add an exports object to your store: ' + name\n      )\n    }\n\n    storeInstance = this.dispatcher.getStore(store)\n    Object.keys(spec.exports).forEach(function(key) {\n      // Create a getter\n      const descriptor = Object.getOwnPropertyDescriptor(spec.exports, key)\n      if (descriptor.get) {\n        Object.defineProperty(store.exports, key, {\n          enumerable: descriptor.enumerable,\n          configurable: descriptor.configurable,\n          get: () => descriptor.get.apply(storeInstance),\n        })\n      } else {\n        store.exports[key] = function() {\n          return spec.exports[key].apply(storeInstance, arguments)\n        }\n        spec.exports[key] = spec.exports[key].bind(storeInstance)\n      }\n    })\n\n    return store.exports\n  }\n\n  this.listenTo = function(storeExport, mapping, callback) {\n    return listenToStore($rootScope, this, storeExport, mapping, callback)\n  }\n\n  this.getStore = function(storeExport) {\n    const store = this.stores.filter(s => s.exports === storeExport)[0]\n    return this.dispatcher.getStore(store)\n  }\n\n  this.areStoresRegistered = function(stores) {\n    const storeNames = this.stores.map(store => store.storeName)\n    return stores.every(storeName => storeNames.indexOf(storeName) > -1)\n  }\n\n  this.reset = function() {\n    this.dispatcherInstance.stores = {}\n    this.dispatcherInstance.handlers = {}\n    this.stores = []\n    registeredStores = []\n  }\n\n  // Expose Baobab in case user wants access to it for use outside a store\n  this.Baobab = Baobab\n}\n\n// Wrap \"angular.module\" to attach store method to module instance\nangular.module = function() {\n  // Call the module as normaly and grab the instance\n  const moduleInstance = angularModule.apply(angular, arguments)\n\n  // Attach store method to instance\n  moduleInstance.store = function(storeName, storeDefinition) {\n    // Add to stores array\n    registeredStores.push(storeName)\n\n    // Create a new store\n    this.factory(storeName, [\n      '$injector',\n      'flux',\n      function($injector, flux) {\n        const storeConfig = $injector.invoke(storeDefinition)\n        registeredStores.splice(registeredStores.indexOf(storeName), 1)\n        return flux.createStore(storeName, storeConfig)\n      },\n    ])\n\n    return this\n  }\n\n  return moduleInstance\n}\n\nangular\n  .module('flux', [])\n  .provider('flux', function FluxProvider() {\n    let immutableDefaults = {}\n\n    // Defaults that are passed on to Baobab: https://github.com/Yomguithereal/baobab#options\n    this.setImmutableDefaults = function(defaults) {\n      immutableDefaults = defaults\n    }\n\n    this.autoInjectStores = function(val) {\n      autoInjectStores = val\n    }\n\n    this.useEvalAsync = function(val) {\n      useEvalAsync = val\n    }\n\n    this.$get = [\n      '$rootScope',\n      $rootScope => new FluxService(immutableDefaults, $rootScope),\n    ]\n  })\n  .run([\n    '$rootScope',\n    '$injector',\n    'flux',\n    function($rootScope, $injector, flux) {\n      if (angular.mock) {\n        // Forced to false during testing to avoid needing to flush to test $listenTo interaction\n        useEvalAsync = false\n        flux.reset()\n      }\n\n      if (!angular.mock && autoInjectStores) {\n        $injector.invoke(registeredStores.concat(angular.noop))\n      }\n\n      // Extend scopes with $listenTo\n      $rootScope.constructor.prototype.$listenTo = function(\n        storeExport,\n        mapping,\n        callback\n      ) {\n        const unsubscribe = listenToStore(\n          this,\n          flux,\n          storeExport,\n          mapping,\n          callback\n        )\n\n        if (!callback) {\n          callback = mapping\n        }\n\n        // Call the callback so that state gets the initial sync with the view-model variables. evalAsync is specifically\n        // not used here because state should be available to angular as it is initializing. Otherwise state can be\n        // undefined while the first digest cycle is running.\n        callback({})\n\n        // Remove the listeners on the store when scope is destroyed (GC)\n        this.$on('$destroy', unsubscribe)\n      }\n    },\n  ])\n\nfunction listenToStore($scope, flux, storeExport, mapping, callback) {\n  let cursor, originalCallback\n  const store = flux.getStore(storeExport)\n\n  if (!store.__tree) {\n    throw new Error(\n      'Store ' +\n        storeExport.storeName +\n        ' has not defined state with this.immutable() which is required in order to use $listenTo'\n    )\n  }\n\n  if (!callback) {\n    callback = mapping\n    mapping = undefined\n  }\n\n  cursor = mapping ? store.__tree.select(mapping) : store.__tree\n\n  originalCallback = callback\n  if (useEvalAsync) {\n    callback = e => {\n      $scope.$evalAsync(() => originalCallback(e))\n    }\n  }\n\n  cursor.on('update', callback)\n\n  return () => cursor.off('update', callback)\n}\n\nexport default 'flux'\n"],"names":["angularModule","angular","module","registeredStores","autoInjectStores","useEvalAsync","createStore","name","spec","immutableDefaults","flux","Store","dispatcher","waitFor","stores","cb","Array","isArray","areStoresRegistered","Error","join","bind","initialize","handlers","storeName","prototype","immutable","initialState","options","__tree","set","Baobab","extend","monkey","Object","keys","forEach","key","FluxService","$rootScope","dispatcherInstance","dispatchr","createDispatcher","createContext","dispatch","length","console","warn","apply","arguments","store","storeInstance","exports","registerStore","push","getStore","descriptor","getOwnPropertyDescriptor","get","defineProperty","enumerable","configurable","listenTo","storeExport","mapping","callback","listenToStore","filter","s","storeNames","map","every","indexOf","reset","moduleInstance","storeDefinition","factory","$injector","storeConfig","invoke","splice","provider","FluxProvider","setImmutableDefaults","defaults","val","$get","run","mock","concat","noop","constructor","$listenTo","unsubscribe","$on","$scope","cursor","originalCallback","undefined","select","e","$evalAsync","on","off"],"mappings":"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"}